<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="3/9/2024 10:32:55 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="DANNYC"
  DTS:CreatorName="DANNYC\danny"
  DTS:DTSID="{56FFC655-A5A7-438F-BEC9-F9A15D7309FE}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="16.0.5270.0"
  DTS:LocaleID="3082"
  DTS:ObjectName="Package"
  DTS:PackageType="5"
  DTS:VersionBuild="1"
  DTS:VersionGUID="{CA06589C-20DE-4118-B540-8354B2BD8783}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[DANNYC.DBP1]"
      DTS:CreationName="ADO.NET:System.Data.SqlClient.SqlConnection, System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
      DTS:DTSID="{6FB71E1A-FCD0-41BB-A23E-EF3923D3D09D}"
      DTS:ObjectName="DANNYC.DBP1">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=DANNYC;Initial Catalog=DBP1;Integrated Security=True;Application Name=SSIS-Package-{6FB71E1A-FCD0-41BB-A23E-EF3923D3D09D}DANNYC.DBP1;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[DANNYC.DBP2]"
      DTS:CreationName="ADO.NET:System.Data.SqlClient.SqlConnection, System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
      DTS:DTSID="{EF002FEA-383B-4DBD-AD05-5A0AED0FC78F}"
      DTS:ObjectName="DANNYC.DBP2">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=DANNYC;Initial Catalog=DBP2;Integrated Security=True;Application Name=SSIS-Package-{EF002FEA-383B-4DBD-AD05-5A0AED0FC78F}DANNYC.DBP2;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[DANNYC.DBWS]"
      DTS:CreationName="ADO.NET:System.Data.SqlClient.SqlConnection, System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
      DTS:DTSID="{6BC583FD-21A7-4EE2-BC8D-004337E4A36D}"
      DTS:ObjectName="DANNYC.DBWS">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=DANNYC;Initial Catalog=DBWS;Integrated Security=True;Application Name=SSIS-Package-{6BC583FD-21A7-4EE2-BC8D-004337E4A36D}DANNYC.DBWS;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{887DF2AB-E9E1-4278-8AEC-C7CD9646A229}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Delimitador">
      <DTS:VariableValue
        DTS:DataType="8">|</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C826ABD9-1DF6-4C04-8B60-550DCC820219}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ExtensionC">
      <DTS:VariableValue
        DTS:DataType="8">.comp</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{36446DE7-07C4-4F6A-BAF2-18C702339859}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ExtensionV">
      <DTS:VariableValue
        DTS:DataType="8">.vent</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F429BC63-94A1-482B-AEE4-C8F263D03FBB}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FolderError">
      <DTS:VariableValue
        DTS:DataType="8">C:\Users\danny\OneDrive\Documents\DocumentosI\1 SEMESTRE 2024\Semi2\LAB\Para la proyecto1\ProyectoF1\Semi2_P1_S1_2024\Errors</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{173E3266-2A75-406F-BA2C-BA4F8AF37C94}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FolderOrigen1">
      <DTS:VariableValue
        DTS:DataType="8">C:\Users\danny\OneDrive\Documents\DocumentosI\1 SEMESTRE 2024\Semi2\LAB\Para la proyecto1\ArchivosEntradaSG\DBP1</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{DB85276C-7A6B-48FE-9EC9-F1EE70704A00}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FolderOrigen2">
      <DTS:VariableValue
        DTS:DataType="8">C:\Users\danny\OneDrive\Documents\DocumentosI\1 SEMESTRE 2024\Semi2\LAB\Para la proyecto1\ArchivosEntradaSG\DBP2</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{EF97D6B8-73AD-4C14-8E88-18250520B807}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="TablaDestino1">
      <DTS:VariableValue
        DTS:DataType="8">TempCompras</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{7D2453F2-A859-4C63-81D7-7C10EA39BDCF}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="TablaDestino2">
      <DTS:VariableValue
        DTS:DataType="8">TempVentas</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Tarea Ejecutar BDP1"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Tarea Ejecutar BDP1"
      DTS:DTSID="{A155A0AD-AC80-4AD4-BF53-988315435343}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Tarea Ejecutar BDP1"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{6FB71E1A-FCD0-41BB-A23E-EF3923D3D09D}"
          SQLTask:SqlStatementSource="DELETE FROM TempCompras;&#xA;&#xA;DELETE FROM TempVentas;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Tarea Ejecutar BDP2"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Tarea Ejecutar BDP2"
      DTS:DTSID="{EC193DF6-DA53-4D80-B53C-2148418CEB69}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Tarea Ejecutar BDP2"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{EF002FEA-383B-4DBD-AD05-5A0AED0FC78F}"
          SQLTask:SqlStatementSource="DELETE FROM TempCompras;&#xA;&#xA;DELETE FROM TempVentas;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Tarea ScriptBD1"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Tarea ScriptBD1"
      DTS:DTSID="{66CBB53D-AAE0-40E2-B1B8-94EB37BE6EA9}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Tarea ScriptBD1"
      DTS:ThreadHint="1">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_016c29afb6d447c38a811e86e55af541"
          VSTAMajorVersion="16"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::Delimitador,User::ExtensionC,User::ExtensionV,User::FolderError,User::FolderOrigen1,User::TablaDestino1,User::TablaDestino2">
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.IO;
using System.Data.SqlClient;
#endregion

namespace ST_016c29afb6d447c38a811e86e55af541
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            try
            {
                //Compras=================================================================================
                string Delimitador = Dts.Variables["User::Delimitador"].Value.ToString();
                string Extension = Dts.Variables["User::ExtensionC"].Value.ToString();
                string ExtensionV = Dts.Variables["User::ExtensionV"].Value.ToString();
                string FolderOrigen = Dts.Variables["User::FolderOrigen1"].Value.ToString();
                string TablaDestino = Dts.Variables["User::TablaDestino1"].Value.ToString();
                string TablaDestinoV = Dts.Variables["User::TablaDestino2"].Value.ToString();

                string[] fileentries = Directory.GetFiles(FolderOrigen, "*" + Extension);//Aqui le indicamos que acepte todos los .Vent y .Comp

                foreach (string filename in fileentries)
                {
                    SqlConnection myADONETConnection = new SqlConnection();
                    myADONETConnection = (SqlConnection)(Dts.Connections["DANNYC.DBP1"].AcquireConnection(Dts.Transaction) as SqlConnection);
                    int contador = 0;

                    string linea;

                    System.IO.StreamReader SourceFile = new System.IO.StreamReader(filename);

                    while ((linea = SourceFile.ReadLine()) != null)
                    {
                        if (contador > 0)
                        { //se salta la linea de los encabezados

                            string[] campos = linea.Split(Delimitador.ToCharArray()[0]);



                            string query = "INSERT INTO " + TablaDestino + " (Fecha, CodProveedor, NameProveedor, DirecProveedor, NumberProveedor, WebProveedor, CodProducto, NameProducto, MarcaProducto, Categoria, SodSuSursal, NameSucursal, DirecSucursal, Region, Depa, Units, CostoU) VALUES (@Fecha, @CodProveedor, @NameProveedor, @DirecProveedor, @NumberProveedor, @WebProveedor, @CodProducto, @NameProducto, @MarcaProducto, @Categoria, @SodSuSursal, @NameSucursal, @DirecSucursal, @Region, @Depa, @Units, @CostoU)";

                            using (SqlCommand myCommand = new SqlCommand(query, myADONETConnection))
                            {
                                // Agregar par?metros y sus valores
                                // Agregar los par�metros
                                myCommand.Parameters.AddWithValue("@Fecha", campos[0]);
                                myCommand.Parameters.AddWithValue("@CodProveedor", campos[1]);
                                myCommand.Parameters.AddWithValue("@NameProveedor", campos[2]);
                                myCommand.Parameters.AddWithValue("@DirecProveedor", campos[3]);
                                myCommand.Parameters.AddWithValue("@NumberProveedor", campos[4]);
                                myCommand.Parameters.AddWithValue("@WebProveedor", campos[5]);
                                myCommand.Parameters.AddWithValue("@CodProducto", campos[6]);
                                myCommand.Parameters.AddWithValue("@NameProducto", campos[7]);
                                myCommand.Parameters.AddWithValue("@MarcaProducto", campos[8]);
                                myCommand.Parameters.AddWithValue("@Categoria", campos[9]);
                                myCommand.Parameters.AddWithValue("@SodSuSursal", campos[10]);
                                myCommand.Parameters.AddWithValue("@NameSucursal", campos[11]);
                                myCommand.Parameters.AddWithValue("@DirecSucursal", campos[12]);
                                myCommand.Parameters.AddWithValue("@Region", campos[13]);
                                myCommand.Parameters.AddWithValue("@Depa", campos[14]);
                                myCommand.Parameters.AddWithValue("@Units", campos[15]);
                                myCommand.Parameters.AddWithValue("@CostoU", campos[16]);

                                // Ejecutar el comando
                                myCommand.ExecuteNonQuery();
                            }


                           

                        }
                        contador++;
                    }
                    SourceFile.Close();
                    Dts.TaskResult = (int)ScriptResults.Success;


                }

                //VENTAS=================================================================================
                string[] fileentriesV = Directory.GetFiles(FolderOrigen, "*" + ExtensionV);//Aqui le indicamos que acepte todos los .Vent y .Comp

                foreach (string filename in fileentriesV)
                {
                    SqlConnection myADONETConnection = new SqlConnection();
                    myADONETConnection = (SqlConnection)(Dts.Connections["DANNYC.DBP1"].AcquireConnection(Dts.Transaction) as SqlConnection);
                    int contador = 0;

                    string linea;

                    System.IO.StreamReader SourceFile = new System.IO.StreamReader(filename);

                    while ((linea = SourceFile.ReadLine()) != null)
                    {
                        if (contador > 0)
                        { //se salta la linea de los encabezados

                            string[] campos = linea.Split(Delimitador.ToCharArray()[0]);



                            string query = "INSERT INTO " + TablaDestinoV + " (Fecha, CodCliente, NameCliente, TipoCliente, DirecCliente, NumberCliente, CodVendedor, NameVendedor, Vacacionista, CodProducto, NameProducto, MarcaProducto, Categoria, SodSuSursal, NameSucursal, DirecSucursal, Region, Depa, Units, PrecioUnits) VALUES (@Fecha, @CodCliente, @NameCliente, @TipoCliente, @DirecCliente, @NumberCliente, @CodVendedor, @NameVendedor, @Vacacionista, @CodProducto, @NameProducto, @MarcaProducto, @Categoria, @SodSuSursal, @NameSucursal, @DirecSucursal, @Region, @Depa, @Units, @PrecioUnits)";

                            using (SqlCommand myCommand = new SqlCommand(query, myADONETConnection))
                            {
                                // Agregar par?metros y sus valores
                                // Agregar los par�metros
                                myCommand.Parameters.AddWithValue("@Fecha", campos[0]);
                                myCommand.Parameters.AddWithValue("@CodCliente", campos[1]);
                                myCommand.Parameters.AddWithValue("@NameCliente", campos[2]);
                                myCommand.Parameters.AddWithValue("@TipoCliente", campos[3]);
                                myCommand.Parameters.AddWithValue("@DirecCliente", campos[4]);
                                myCommand.Parameters.AddWithValue("@NumberCliente", campos[5]);
                                myCommand.Parameters.AddWithValue("@CodVendedor", campos[6]);
                                myCommand.Parameters.AddWithValue("@NameVendedor", campos[7]);
                                myCommand.Parameters.AddWithValue("@Vacacionista", campos[8]);
                                myCommand.Parameters.AddWithValue("@CodProducto", campos[9]);
                                myCommand.Parameters.AddWithValue("@NameProducto", campos[10]);
                                myCommand.Parameters.AddWithValue("@MarcaProducto", campos[11]);
                                myCommand.Parameters.AddWithValue("@Categoria", campos[12]);
                                myCommand.Parameters.AddWithValue("@SodSuSursal", campos[13]);
                                myCommand.Parameters.AddWithValue("@NameSucursal", campos[14]);
                                myCommand.Parameters.AddWithValue("@DirecSucursal", campos[15]);
                                myCommand.Parameters.AddWithValue("@Region", campos[16]);
                                myCommand.Parameters.AddWithValue("@Depa", campos[17]);
                                myCommand.Parameters.AddWithValue("@Units", campos[18]);
                                myCommand.Parameters.AddWithValue("@PrecioUnits", campos[19]);

                                // Ejecutar el comando
                                myCommand.ExecuteNonQuery();
                            }




                        }
                        contador++;
                    }
                    SourceFile.Close();
                    Dts.TaskResult = (int)ScriptResults.Success;


                }


            }
            catch (Exception ex)
            {
                using (StreamWriter sw = File.CreateText(Dts.Variables["User::FolderError"].Value.ToString() + "\\" + "ErrorLog.log"))
                {
                    sw.WriteLine(ex.ToString());
                    Dts.TaskResult = (int)ScriptResults.Failure;
                }
            }
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:Language>msBuild</msb:Language>
    <msb:CodeName>ST_016c29afb6d447c38a811e86e55af541</msb:CodeName>
    <msb:DisplayName>ST_016c29afb6d447c38a811e86e55af541</msb:DisplayName>
    <msb:ProjectId>{21758F32-0D1E-4CC5-A719-6F572722020D}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_016c29afb6d447c38a811e86e55af541.csproj" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_016c29afb6d447c38a811e86e55af541.Properties.Settings.get_Default():ST_016c29afb6d447c38a811e86e55af541.Properties.Sett" +
    "ings")]

namespace ST_016c29afb6d447c38a811e86e55af541.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ST_016c29afb6d447c38a811e86e55af541.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{381cace2-adf1-4186-a2a5-521f2b599c2d}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_016c29afb6d447c38a811e86e55af541</RootNamespace>
    <AssemblyName>ST_016c29afb6d447c38a811e86e55af541</AssemblyName>
    <TargetFrameworkVersion>v4.7.2</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>

  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
         <Generator>ResXFileCodeGenerator</Generator>
         <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
             <AutoGen>True</AutoGen>
         <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
         <Generator>SettingsSingleFileGenerator</Generator>
         <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
         <AutoGen>True</AutoGen>
         <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
         <SubType>Code</SubType>
    </Compile>
  </ItemGroup>

  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />

  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask"
                           HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}"
                           ApplicationType="usd"
                           Language="cs"
                           TemplatesPath=""
                           DebugInfoCommandLine=""
                           DebugInfoWorkingDir=""
                           IconImageList=""/>
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex="">
        </Host>
        <ProjectClient>
            <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_016c29afb6d447c38a811e86e55af541")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("HP Inc.")]
[assembly: AssemblyProduct("ST_016c29afb6d447c38a811e86e55af541")]
[assembly: AssemblyCopyright("Copyright @ HP Inc. 2024")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_016c29afb6d447c38a811e86e55af541.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_016c29afb6d447c38a811e86e55af541.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_016c29afb6d447c38a811e86e55af541.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_016c29afb6d447c38a811e86e55af541.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_016c29afb6d447c38a811e86e55af541.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_016c29afb6d447c38a811e86e55af541.dll">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
AAAAAAQAAAAAAAAAAAAAAL8AEAQAAAAAEAAAAAAAAAAAAAAAyAA4AAAAAAAAAAAAAQAAAJgFAAAF
AAIAAAAAAABTVF8wMTZjMjlhZmI2ZDQ0N2MzOGE4MTFlODZlNTVhZjU0MQA8TW9kdWxlPgBTeXN0
ZW0uSU8ATWljcm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAHZhbHVlX18AU3lzdGVtLkRhdGEA
bXNjb3JsaWIARGJDb21tYW5kAFNxbENvbW1hbmQAZGVmYXVsdEluc3RhbmNlAFZhcmlhYmxlAElE
aXNwb3NhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAEZpbGUATWljcm9z
b2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBSZWFkTGluZQBXcml0ZUxpbmUAVHlwZQBGYWlsdXJl
AGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBWU1RBUlRTY3JpcHRPYmpl
Y3RNb2RlbEJhc2UAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UAQ2xvc2UARGlzcG9zZQBFZGl0b3JC
cm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJD
b2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRl
AEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0
RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJs
eURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNz
ZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3Jp
cHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGlt
ZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAZ2V0X1ZhbHVlAEFkZFdpdGhWYWx1ZQB2YWx1ZQBTeXN0
ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRvU3RyaW5nAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0
VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAFNjcmlwdE9iamVj
dE1vZGVsAFN5c3RlbS5Db21wb25lbnRNb2RlbABTVF8wMTZjMjlhZmI2ZDQ0N2MzOGE4MTFlODZl
NTVhZjU0MS5kbGwAZ2V0X0l0ZW0AU3lzdGVtAEVudW0AcmVzb3VyY2VNYW4AU2NyaXB0TWFpbgBT
eXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBnZXRfVHJhbnNhY3Rpb24A
U3lzdGVtLlJlZmxlY3Rpb24AU3FsUGFyYW1ldGVyQ29sbGVjdGlvbgBBY3F1aXJlQ29ubmVjdGlv
bgBTcWxDb25uZWN0aW9uAEV4Y2VwdGlvbgBTeXN0ZW0uRGF0YS5Db21tb24AQ3VsdHVyZUluZm8A
Q2hhcgBTdHJlYW1SZWFkZXIAVGV4dFJlYWRlcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAENvbm5lY3Rp
b25NYW5hZ2VyAFNxbFBhcmFtZXRlcgBTdHJlYW1Xcml0ZXIAVGV4dFdyaXRlcgAuY3RvcgAuY2N0
b3IAU3lzdGVtLkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lz
dGVtLlJlc291cmNlcwBTVF8wMTZjMjlhZmI2ZDQ0N2MzOGE4MTFlODZlNTVhZjU0MS5Qcm9wZXJ0
aWVzLlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU1RfMDE2YzI5YWZiNmQ0NDdj
MzhhODExZTg2ZTU1YWY1NDEuUHJvcGVydGllcwBnZXRfVmFyaWFibGVzAEdldEZpbGVzAFNldHRp
bmdzAGdldF9Db25uZWN0aW9ucwBnZXRfUGFyYW1ldGVycwBTdWNjZXNzAGdldF9EdHMAU2NyaXB0
UmVzdWx0cwBDb25jYXQAT2JqZWN0AFNwbGl0AGdldF9EZWZhdWx0AHNldF9UYXNrUmVzdWx0AFN5
c3RlbS5EYXRhLlNxbENsaWVudABDcmVhdGVUZXh0AFRvQ2hhckFycmF5AGdldF9Bc3NlbWJseQBF
eGVjdXRlTm9uUXVlcnkARGlyZWN0b3J5AAAAAAAjVQBzAGUAcgA6ADoARABlAGwAaQBtAGkAdABh
AGQAbwByAAAhVQBzAGUAcgA6ADoARQB4AHQAZQBuAHMAaQBvAG4AQwAAIVUAcwBlAHIAOgA6AEUA
eAB0AGUAbgBzAGkAbwBuAFYAACdVAHMAZQByADoAOgBGAG8AbABkAGUAcgBPAHIAaQBnAGUAbgAx
AAAnVQBzAGUAcgA6ADoAVABhAGIAbABhAEQAZQBzAHQAaQBuAG8AMQAAJ1UAcwBlAHIAOgA6AFQA
YQBiAGwAYQBEAGUAcwB0AGkAbgBvADIAAAMqAAAXRABBAE4ATgBZAEMALgBEAEIAUAAxAAAZSQBO
AFMARQBSAFQAIABJAE4AVABPACAAAINxIAAoAEYAZQBjAGgAYQAsACAAQwBvAGQAUAByAG8AdgBl
AGUAZABvAHIALAAgAE4AYQBtAGUAUAByAG8AdgBlAGUAZABvAHIALAAgAEQAaQByAGUAYwBQAHIA
bwB2AGUAZQBkAG8AcgAsACAATgB1AG0AYgBlAHIAUAByAG8AdgBlAGUAZABvAHIALAAgAFcAZQBi
AFAAcgBvAHYAZQBlAGQAbwByACwAIABDAG8AZABQAHIAbwBkAHUAYwB0AG8ALAAgAE4AYQBtAGUA
UAByAG8AZAB1AGMAdABvACwAIABNAGEAcgBjAGEAUAByAG8AZAB1AGMAdABvACwAIABDAGEAdABl
AGcAbwByAGkAYQAsACAAUwBvAGQAUwB1AFMAdQByAHMAYQBsACwAIABOAGEAbQBlAFMAdQBjAHUA
cgBzAGEAbAAsACAARABpAHIAZQBjAFMAdQBjAHUAcgBzAGEAbAAsACAAUgBlAGcAaQBvAG4ALAAg
AEQAZQBwAGEALAAgAFUAbgBpAHQAcwAsACAAQwBvAHMAdABvAFUAKQAgAFYAQQBMAFUARQBTACAA
KABAAEYAZQBjAGgAYQAsACAAQABDAG8AZABQAHIAbwB2AGUAZQBkAG8AcgAsACAAQABOAGEAbQBl
AFAAcgBvAHYAZQBlAGQAbwByACwAIABAAEQAaQByAGUAYwBQAHIAbwB2AGUAZQBkAG8AcgAsACAA
QABOAHUAbQBiAGUAcgBQAHIAbwB2AGUAZQBkAG8AcgAsACAAQABXAGUAYgBQAHIAbwB2AGUAZQBk
AG8AcgAsACAAQABDAG8AZABQAHIAbwBkAHUAYwB0AG8ALAAgAEAATgBhAG0AZQBQAHIAbwBkAHUA
YwB0AG8ALAAgAEAATQBhAHIAYwBhAFAAcgBvAGQAdQBjAHQAbwAsACAAQABDAGEAdABlAGcAbwBy
AGkAYQAsACAAQABTAG8AZABTAHUAUwB1AHIAcwBhAGwALAAgAEAATgBhAG0AZQBTAHUAYwB1AHIA
cwBhAGwALAAgAEAARABpAHIAZQBjAFMAdQBjAHUAcgBzAGEAbAAsACAAQABSAGUAZwBpAG8AbgAs
ACAAQABEAGUAcABhACwAIABAAFUAbgBpAHQAcwAsACAAQABDAG8AcwB0AG8AVQApAAANQABGAGUA
YwBoAGEAABtAAEMAbwBkAFAAcgBvAHYAZQBlAGQAbwByAAAdQABOAGEAbQBlAFAAcgBvAHYAZQBl
AGQAbwByAAAfQABEAGkAcgBlAGMAUAByAG8AdgBlAGUAZABvAHIAACFAAE4AdQBtAGIAZQByAFAA
cgBvAHYAZQBlAGQAbwByAAAbQABXAGUAYgBQAHIAbwB2AGUAZQBkAG8AcgAAGUAAQwBvAGQAUABy
AG8AZAB1AGMAdABvAAAbQABOAGEAbQBlAFAAcgBvAGQAdQBjAHQAbwAAHUAATQBhAHIAYwBhAFAA
cgBvAGQAdQBjAHQAbwAAFUAAQwBhAHQAZQBnAG8AcgBpAGEAABlAAFMAbwBkAFMAdQBTAHUAcgBz
AGEAbAAAG0AATgBhAG0AZQBTAHUAYwB1AHIAcwBhAGwAAB1AAEQAaQByAGUAYwBTAHUAYwB1AHIA
cwBhAGwAAA9AAFIAZQBnAGkAbwBuAAALQABEAGUAcABhAAANQABVAG4AaQB0AHMAAA9AAEMAbwBz
AHQAbwBVAACECyAAKABGAGUAYwBoAGEALAAgAEMAbwBkAEMAbABpAGUAbgB0AGUALAAgAE4AYQBt
AGUAQwBsAGkAZQBuAHQAZQAsACAAVABpAHAAbwBDAGwAaQBlAG4AdABlACwAIABEAGkAcgBlAGMA
QwBsAGkAZQBuAHQAZQAsACAATgB1AG0AYgBlAHIAQwBsAGkAZQBuAHQAZQAsACAAQwBvAGQAVgBl
AG4AZABlAGQAbwByACwAIABOAGEAbQBlAFYAZQBuAGQAZQBkAG8AcgAsACAAVgBhAGMAYQBjAGkA
bwBuAGkAcwB0AGEALAAgAEMAbwBkAFAAcgBvAGQAdQBjAHQAbwAsACAATgBhAG0AZQBQAHIAbwBk
AHUAYwB0AG8ALAAgAE0AYQByAGMAYQBQAHIAbwBkAHUAYwB0AG8ALAAgAEMAYQB0AGUAZwBvAHIA
aQBhACwAIABTAG8AZABTAHUAUwB1AHIAcwBhAGwALAAgAE4AYQBtAGUAUwB1AGMAdQByAHMAYQBs
ACwAIABEAGkAcgBlAGMAUwB1AGMAdQByAHMAYQBsACwAIABSAGUAZwBpAG8AbgAsACAARABlAHAA
YQAsACAAVQBuAGkAdABzACwAIABQAHIAZQBjAGkAbwBVAG4AaQB0AHMAKQAgAFYAQQBMAFUARQBT
ACAAKABAAEYAZQBjAGgAYQAsACAAQABDAG8AZABDAGwAaQBlAG4AdABlACwAIABAAE4AYQBtAGUA
QwBsAGkAZQBuAHQAZQAsACAAQABUAGkAcABvAEMAbABpAGUAbgB0AGUALAAgAEAARABpAHIAZQBj
AEMAbABpAGUAbgB0AGUALAAgAEAATgB1AG0AYgBlAHIAQwBsAGkAZQBuAHQAZQAsACAAQABDAG8A
ZABWAGUAbgBkAGUAZABvAHIALAAgAEAATgBhAG0AZQBWAGUAbgBkAGUAZABvAHIALAAgAEAAVgBh
AGMAYQBjAGkAbwBuAGkAcwB0AGEALAAgAEAAQwBvAGQAUAByAG8AZAB1AGMAdABvACwAIABAAE4A
YQBtAGUAUAByAG8AZAB1AGMAdABvACwAIABAAE0AYQByAGMAYQBQAHIAbwBkAHUAYwB0AG8ALAAg
AEAAQwBhAHQAZQBnAG8AcgBpAGEALAAgAEAAUwBvAGQAUwB1AFMAdQByAHMAYQBsACwAIABAAE4A
YQBtAGUAUwB1AGMAdQByAHMAYQBsACwAIABAAEQAaQByAGUAYwBTAHUAYwB1AHIAcwBhAGwALAAg
AEAAUgBlAGcAaQBvAG4ALAAgAEAARABlAHAAYQAsACAAQABVAG4AaQB0AHMALAAgAEAAUAByAGUA
YwBpAG8AVQBuAGkAdABzACkAABdAAEMAbwBkAEMAbABpAGUAbgB0AGUAABlAAE4AYQBtAGUAQwBs
AGkAZQBuAHQAZQAAGUAAVABpAHAAbwBDAGwAaQBlAG4AdABlAAAbQABEAGkAcgBlAGMAQwBsAGkA
ZQBuAHQAZQAAHUAATgB1AG0AYgBlAHIAQwBsAGkAZQBuAHQAZQAAGUAAQwBvAGQAVgBlAG4AZABl
AGQAbwByAAAbQABOAGEAbQBlAFYAZQBuAGQAZQBkAG8AcgAAG0AAVgBhAGMAYQBjAGkAbwBuAGkA
cwB0AGEAABlAAFAAcgBlAGMAaQBvAFUAbgBpAHQAcwAAI1UAcwBlAHIAOgA6AEYAbwBsAGQAZQBy
AEUAcgByAG8AcgAAG1wARQByAHIAbwByAEwAbwBnAC4AbABvAGcAAHFTAFQAXwAwADEANgBjADIA
OQBhAGYAYgA2AGQANAA0ADcAYwAzADgAYQA4ADEAMQBlADgANgBlADUANQBhAGYANQA0ADEALgBQ
AHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAAAAAGdNtzNh8UlLt9lSrLIB
dp4ABCABAQgDIAABBSABARERBCABAQ4FIAEBEWUjBxYODg4ODg4dDggSPQgOEkEdDhJFEj0IDhJB
HQ4SRRJJEk0EIAASdQQgABJ5BSABEn0cAyAAHAMgAA4FAAIODg4GAAIdDg4OBSAAEoCJBiABEoCN
HAQgARwcBCAAHQMGIAEdDh0DBgADDg4ODgYgAgEOEj0FIAASgJUHIAISgJkOHAMgAAgFAAESTQ4I
AAESgLERgLUFIAASgLkHIAIBDhKAuQi3elxWGTTgiQiJhF3NgIDMkQQAAAAABAEAAAADBhJdAwYS
YQMGEhACBggDBhEUBAAAEl0EAAASYQUAAQESYQQAABIQAwAAAQQIABJdBAgAEmEECAASEAgBAAgA
AAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU1RfMDE2YzI5
YWZiNmQ0NDdjMzhhODExZTg2ZTU1YWY1NDEAAAUBAAAAAAwBAAdIUCBJbmMuAAAdAQAYQ29weXJp
Z2h0IEAgSFAgSW5jLiAyMDI0AABNAQAcLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjcuMgEAVA4U
RnJhbWV3b3JrRGlzcGxheU5hbWUULk5FVCBGcmFtZXdvcmsgNC43LjIAtAAAAM7K774BAAAAkQAA
AGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAu
MC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lz
dGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAADhC
AAAAAAAAAAAAAFJCAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAABEQgAAAAAAAAAAAAAAAF9Db3JE
bGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAEAAA
ABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABYYAAA
NgQAAAAAAAAAAAAANgQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E7/4A
AAEAAAABAANdgiIAAAEAA12CIj8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBWAGEA
cgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAAAACw
BJYDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAHIDAAABADAAMAAwADAAMAA0AGIA
MAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAwAAgAAQBDAG8AbQBwAGEAbgB5AE4AYQBt
AGUAAAAAAEgAUAAgAEkAbgBjAC4AAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8A
bgAAAAAAUwBUAF8AMAAxADYAYwAyADkAYQBmAGIANgBkADQANAA3AGMAMwA4AGEAOAAxADEAZQA4
ADYAZQA1ADUAYQBmADUANAAxAAAAPgAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4A
MAAuADgAOAAzADQALgAyADMAOAAxADEAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBl
AAAAUwBUAF8AMAAxADYAYwAyADkAYQBmAGIANgBkADQANAA3AGMAMwA4AGEAOAAxADEAZQA4ADYA
ZQA1ADUAYQBmADUANAAxAC4AZABsAGwAAABWABkAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBo
AHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIABIAFAAIABJAG4AYwAuACAAMgAwADIANAAAAAAA
KgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBn
AGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBUAF8AMAAxADYAYwAyADkAYQBmAGIANgBkADQA
NAA3AGMAMwA4AGEAOAAxADEAZQA4ADYAZQA1ADUAYQBmADUANAAxAC4AZABsAGwAAABoACQAAQBQ
AHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAVABfADAAMQA2AGMAMgA5AGEAZgBiADYAZAA0ADQA
NwBjADMAOABhADgAMQAxAGUAOAA2AGUANQA1AGEAZgA1ADQAMQAAAEIADwABAFAAcgBvAGQAdQBj
AHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AOAA4ADMANAAuADIAMwA4ADEAMQAAAAAARgAPAAEA
QQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AOAA4ADMANAAuADIAMwA4
ADEAMQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAADAAAAGQyAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Tarea ScriptBD2"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Tarea Script"
      DTS:DTSID="{6698F04C-532B-43DD-A091-1CC39F012510}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Tarea ScriptBD2"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_a636d8c31fad4754a9d2417c33697648"
          VSTAMajorVersion="16"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::Delimitador,User::ExtensionC,User::ExtensionV,User::FolderError,User::FolderOrigen2,User::TablaDestino1,User::TablaDestino2">
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a636d8c31fad4754a9d2417c33697648.Properties.Settings.get_Default():ST_a636d8c31fad4754a9d2417c33697648.Properties.Sett" +
    "ings")]

namespace ST_a636d8c31fad4754a9d2417c33697648.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.IO;
using System.Data.SqlClient;
#endregion

namespace ST_a636d8c31fad4754a9d2417c33697648
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            try
            {
                //Compras=================================================================================
                string Delimitador = Dts.Variables["User::Delimitador"].Value.ToString();
                string Extension = Dts.Variables["User::ExtensionC"].Value.ToString();
                string ExtensionV = Dts.Variables["User::ExtensionV"].Value.ToString();
                string FolderOrigen = Dts.Variables["User::FolderOrigen2"].Value.ToString();
                string TablaDestino = Dts.Variables["User::TablaDestino1"].Value.ToString();
                string TablaDestinoV = Dts.Variables["User::TablaDestino2"].Value.ToString();

                string[] fileentries = Directory.GetFiles(FolderOrigen, "*" + Extension);//Aqui le indicamos que acepte todos los .Vent y .Comp

                foreach (string filename in fileentries)
                {
                    SqlConnection myADONETConnection = new SqlConnection();
                    myADONETConnection = (SqlConnection)(Dts.Connections["DANNYC.DBP2"].AcquireConnection(Dts.Transaction) as SqlConnection);
                    int contador = 0;

                    string linea;

                    System.IO.StreamReader SourceFile = new System.IO.StreamReader(filename);

                    while ((linea = SourceFile.ReadLine()) != null)
                    {
                        if (contador > 0)
                        { //se salta la linea de los encabezados

                            string[] campos = linea.Split(Delimitador.ToCharArray()[0]);



                            string query = "INSERT INTO " + TablaDestino + " (Fecha, CodProveedor, NameProveedor, DirecProveedor, NumberProveedor, WebProveedor, CodProducto, NameProducto, MarcaProducto, Categoria, SodSuSursal, NameSucursal, DirecSucursal, Region, Depa, Units, CostoU) VALUES (@Fecha, @CodProveedor, @NameProveedor, @DirecProveedor, @NumberProveedor, @WebProveedor, @CodProducto, @NameProducto, @MarcaProducto, @Categoria, @SodSuSursal, @NameSucursal, @DirecSucursal, @Region, @Depa, @Units, @CostoU)";

                            using (SqlCommand myCommand = new SqlCommand(query, myADONETConnection))
                            {
                                // Agregar par?metros y sus valores
                                // Agregar los par?metros
                                myCommand.Parameters.AddWithValue("@Fecha", campos[0]);
                                myCommand.Parameters.AddWithValue("@CodProveedor", campos[1]);
                                myCommand.Parameters.AddWithValue("@NameProveedor", campos[2]);
                                myCommand.Parameters.AddWithValue("@DirecProveedor", campos[3]);
                                myCommand.Parameters.AddWithValue("@NumberProveedor", campos[4]);
                                myCommand.Parameters.AddWithValue("@WebProveedor", campos[5]);
                                myCommand.Parameters.AddWithValue("@CodProducto", campos[6]);
                                myCommand.Parameters.AddWithValue("@NameProducto", campos[7]);
                                myCommand.Parameters.AddWithValue("@MarcaProducto", campos[8]);
                                myCommand.Parameters.AddWithValue("@Categoria", campos[9]);
                                myCommand.Parameters.AddWithValue("@SodSuSursal", campos[10]);
                                myCommand.Parameters.AddWithValue("@NameSucursal", campos[11]);
                                myCommand.Parameters.AddWithValue("@DirecSucursal", campos[12]);
                                myCommand.Parameters.AddWithValue("@Region", campos[13]);
                                myCommand.Parameters.AddWithValue("@Depa", campos[14]);
                                myCommand.Parameters.AddWithValue("@Units", campos[15]);
                                myCommand.Parameters.AddWithValue("@CostoU", campos[16]);

                                // Ejecutar el comando
                                myCommand.ExecuteNonQuery();
                            }




                        }
                        contador++;
                    }
                    SourceFile.Close();
                    Dts.TaskResult = (int)ScriptResults.Success;


                }

                //VENTAS=================================================================================
                string[] fileentriesV = Directory.GetFiles(FolderOrigen, "*" + ExtensionV);//Aqui le indicamos que acepte todos los .Vent y .Comp
                    
                foreach (string filename in fileentriesV)
                {
                    SqlConnection myADONETConnection = new SqlConnection();
                    myADONETConnection = (SqlConnection)(Dts.Connections["DANNYC.DBP2"].AcquireConnection(Dts.Transaction) as SqlConnection);
                    int contador = 0;

                    string linea;

                    System.IO.StreamReader SourceFile = new System.IO.StreamReader(filename);

                    while ((linea = SourceFile.ReadLine()) != null)
                    {
                        if (contador > 0)
                        { //se salta la linea de los encabezados

                            string[] campos = linea.Split(Delimitador.ToCharArray()[0]);



                            string query = "INSERT INTO " + TablaDestinoV + " (Fecha, CodCliente, NameCliente, TipoCliente, DirecCliente, NumberCliente, CodVendedor, NameVendedor, Vacacionista, CodProducto, NameProducto, MarcaProducto, Categoria, SodSuSursal, NameSucursal, DirecSucursal, Region, Depa, Units, PrecioUnits) VALUES (@Fecha, @CodCliente, @NameCliente, @TipoCliente, @DirecCliente, @NumberCliente, @CodVendedor, @NameVendedor, @Vacacionista, @CodProducto, @NameProducto, @MarcaProducto, @Categoria, @SodSuSursal, @NameSucursal, @DirecSucursal, @Region, @Depa, @Units, @PrecioUnits)";

                            using (SqlCommand myCommand = new SqlCommand(query, myADONETConnection))
                            {
                                // Agregar par?metros y sus valores
                                // Agregar los par?metros
                                myCommand.Parameters.AddWithValue("@Fecha", campos[0]);
                                myCommand.Parameters.AddWithValue("@CodCliente", campos[1]);
                                myCommand.Parameters.AddWithValue("@NameCliente", campos[2]);
                                myCommand.Parameters.AddWithValue("@TipoCliente", campos[3]);
                                myCommand.Parameters.AddWithValue("@DirecCliente", campos[4]);
                                myCommand.Parameters.AddWithValue("@NumberCliente", campos[5]);
                                myCommand.Parameters.AddWithValue("@CodVendedor", campos[6]);
                                myCommand.Parameters.AddWithValue("@NameVendedor", campos[7]);
                                myCommand.Parameters.AddWithValue("@Vacacionista", campos[8]);
                                myCommand.Parameters.AddWithValue("@CodProducto", campos[9]);
                                myCommand.Parameters.AddWithValue("@NameProducto", campos[10]);
                                myCommand.Parameters.AddWithValue("@MarcaProducto", campos[11]);
                                myCommand.Parameters.AddWithValue("@Categoria", campos[12]);
                                myCommand.Parameters.AddWithValue("@SodSuSursal", campos[13]);
                                myCommand.Parameters.AddWithValue("@NameSucursal", campos[14]);
                                myCommand.Parameters.AddWithValue("@DirecSucursal", campos[15]);
                                myCommand.Parameters.AddWithValue("@Region", campos[16]);
                                myCommand.Parameters.AddWithValue("@Depa", campos[17]);
                                myCommand.Parameters.AddWithValue("@Units", campos[18]);
                                myCommand.Parameters.AddWithValue("@PrecioUnits", campos[19]);

                                // Ejecutar el comando
                                myCommand.ExecuteNonQuery();
                            }




                        }
                        contador++;
                    }
                    SourceFile.Close();
                    Dts.TaskResult = (int)ScriptResults.Success;


                }


            }
            catch (Exception ex)
            {
                using (StreamWriter sw = File.CreateText(Dts.Variables["User::FolderError"].Value.ToString() + "\\" + "ErrorLog.log"))
                {
                    sw.WriteLine(ex.ToString());
                    Dts.TaskResult = (int)ScriptResults.Failure;
                }
            }
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="ST_a636d8c31fad4754a9d2417c33697648.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{985e5464-280c-43ab-807e-19b078fb87a1}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_a636d8c31fad4754a9d2417c33697648</RootNamespace>
    <AssemblyName>ST_a636d8c31fad4754a9d2417c33697648</AssemblyName>
    <TargetFrameworkVersion>v4.7.2</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>

  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
         <Generator>ResXFileCodeGenerator</Generator>
         <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
             <AutoGen>True</AutoGen>
         <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
         <Generator>SettingsSingleFileGenerator</Generator>
         <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
         <AutoGen>True</AutoGen>
         <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
         <SubType>Code</SubType>
    </Compile>
  </ItemGroup>

  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />

  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask"
                           HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}"
                           ApplicationType="usd"
                           Language="cs"
                           TemplatesPath=""
                           DebugInfoCommandLine=""
                           DebugInfoWorkingDir=""
                           IconImageList=""/>
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex="">
        </Host>
        <ProjectClient>
            <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:Language>msBuild</msb:Language>
    <msb:CodeName>ST_a636d8c31fad4754a9d2417c33697648</msb:CodeName>
    <msb:DisplayName>ST_a636d8c31fad4754a9d2417c33697648</msb:DisplayName>
    <msb:ProjectId>{7C7A2EE6-A4E1-4BC3-9378-4D9AE2950F75}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_a636d8c31fad4754a9d2417c33697648.csproj" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_a636d8c31fad4754a9d2417c33697648")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("HP Inc.")]
[assembly: AssemblyProduct("ST_a636d8c31fad4754a9d2417c33697648")]
[assembly: AssemblyCopyright("Copyright @ HP Inc. 2024")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a636d8c31fad4754a9d2417c33697648.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a636d8c31fad4754a9d2417c33697648.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_a636d8c31fad4754a9d2417c33697648.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_a636d8c31fad4754a9d2417c33697648.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_a636d8c31fad4754a9d2417c33697648.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_a636d8c31fad4754a9d2417c33697648.dll">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
AAAAAAQAAAAAAAAAAAAAAL8AEAQAAAAAEAAAAAAAAAAAAAAAyAA4AAAAAAAAAAAAAQAAAJgFAAAF
AAIAAAAAAABTVF9hNjM2ZDhjMzFmYWQ0NzU0YTlkMjQxN2MzMzY5NzY0OAA8TW9kdWxlPgBTeXN0
ZW0uSU8ATWljcm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAHZhbHVlX18AU3lzdGVtLkRhdGEA
bXNjb3JsaWIARGJDb21tYW5kAFNxbENvbW1hbmQAZGVmYXVsdEluc3RhbmNlAFZhcmlhYmxlAElE
aXNwb3NhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAEZpbGUATWljcm9z
b2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBSZWFkTGluZQBXcml0ZUxpbmUAVHlwZQBGYWlsdXJl
AGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBWU1RBUlRTY3JpcHRPYmpl
Y3RNb2RlbEJhc2UAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UAQ2xvc2UARGlzcG9zZQBFZGl0b3JC
cm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJD
b2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRl
AEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0
RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJs
eURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNz
ZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3Jp
cHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGlt
ZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAZ2V0X1ZhbHVlAEFkZFdpdGhWYWx1ZQB2YWx1ZQBTeXN0
ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRvU3RyaW5nAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0
VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAFNjcmlwdE9iamVj
dE1vZGVsAFN5c3RlbS5Db21wb25lbnRNb2RlbABTVF9hNjM2ZDhjMzFmYWQ0NzU0YTlkMjQxN2Mz
MzY5NzY0OC5kbGwAZ2V0X0l0ZW0AU3lzdGVtAEVudW0AcmVzb3VyY2VNYW4AU2NyaXB0TWFpbgBT
eXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBnZXRfVHJhbnNhY3Rpb24A
U3lzdGVtLlJlZmxlY3Rpb24AU3FsUGFyYW1ldGVyQ29sbGVjdGlvbgBBY3F1aXJlQ29ubmVjdGlv
bgBTcWxDb25uZWN0aW9uAEV4Y2VwdGlvbgBTeXN0ZW0uRGF0YS5Db21tb24AQ3VsdHVyZUluZm8A
Q2hhcgBTdHJlYW1SZWFkZXIAVGV4dFJlYWRlcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAENvbm5lY3Rp
b25NYW5hZ2VyAFNxbFBhcmFtZXRlcgBTdHJlYW1Xcml0ZXIAVGV4dFdyaXRlcgAuY3RvcgAuY2N0
b3IAU3lzdGVtLkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lz
dGVtLlJlc291cmNlcwBTVF9hNjM2ZDhjMzFmYWQ0NzU0YTlkMjQxN2MzMzY5NzY0OC5Qcm9wZXJ0
aWVzLlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU1RfYTYzNmQ4YzMxZmFkNDc1
NGE5ZDI0MTdjMzM2OTc2NDguUHJvcGVydGllcwBnZXRfVmFyaWFibGVzAEdldEZpbGVzAFNldHRp
bmdzAGdldF9Db25uZWN0aW9ucwBnZXRfUGFyYW1ldGVycwBTdWNjZXNzAGdldF9EdHMAU2NyaXB0
UmVzdWx0cwBDb25jYXQAT2JqZWN0AFNwbGl0AGdldF9EZWZhdWx0AHNldF9UYXNrUmVzdWx0AFN5
c3RlbS5EYXRhLlNxbENsaWVudABDcmVhdGVUZXh0AFRvQ2hhckFycmF5AGdldF9Bc3NlbWJseQBF
eGVjdXRlTm9uUXVlcnkARGlyZWN0b3J5AAAAAAAjVQBzAGUAcgA6ADoARABlAGwAaQBtAGkAdABh
AGQAbwByAAAhVQBzAGUAcgA6ADoARQB4AHQAZQBuAHMAaQBvAG4AQwAAIVUAcwBlAHIAOgA6AEUA
eAB0AGUAbgBzAGkAbwBuAFYAACdVAHMAZQByADoAOgBGAG8AbABkAGUAcgBPAHIAaQBnAGUAbgAy
AAAnVQBzAGUAcgA6ADoAVABhAGIAbABhAEQAZQBzAHQAaQBuAG8AMQAAJ1UAcwBlAHIAOgA6AFQA
YQBiAGwAYQBEAGUAcwB0AGkAbgBvADIAAAMqAAAXRABBAE4ATgBZAEMALgBEAEIAUAAyAAAZSQBO
AFMARQBSAFQAIABJAE4AVABPACAAAINxIAAoAEYAZQBjAGgAYQAsACAAQwBvAGQAUAByAG8AdgBl
AGUAZABvAHIALAAgAE4AYQBtAGUAUAByAG8AdgBlAGUAZABvAHIALAAgAEQAaQByAGUAYwBQAHIA
bwB2AGUAZQBkAG8AcgAsACAATgB1AG0AYgBlAHIAUAByAG8AdgBlAGUAZABvAHIALAAgAFcAZQBi
AFAAcgBvAHYAZQBlAGQAbwByACwAIABDAG8AZABQAHIAbwBkAHUAYwB0AG8ALAAgAE4AYQBtAGUA
UAByAG8AZAB1AGMAdABvACwAIABNAGEAcgBjAGEAUAByAG8AZAB1AGMAdABvACwAIABDAGEAdABl
AGcAbwByAGkAYQAsACAAUwBvAGQAUwB1AFMAdQByAHMAYQBsACwAIABOAGEAbQBlAFMAdQBjAHUA
cgBzAGEAbAAsACAARABpAHIAZQBjAFMAdQBjAHUAcgBzAGEAbAAsACAAUgBlAGcAaQBvAG4ALAAg
AEQAZQBwAGEALAAgAFUAbgBpAHQAcwAsACAAQwBvAHMAdABvAFUAKQAgAFYAQQBMAFUARQBTACAA
KABAAEYAZQBjAGgAYQAsACAAQABDAG8AZABQAHIAbwB2AGUAZQBkAG8AcgAsACAAQABOAGEAbQBl
AFAAcgBvAHYAZQBlAGQAbwByACwAIABAAEQAaQByAGUAYwBQAHIAbwB2AGUAZQBkAG8AcgAsACAA
QABOAHUAbQBiAGUAcgBQAHIAbwB2AGUAZQBkAG8AcgAsACAAQABXAGUAYgBQAHIAbwB2AGUAZQBk
AG8AcgAsACAAQABDAG8AZABQAHIAbwBkAHUAYwB0AG8ALAAgAEAATgBhAG0AZQBQAHIAbwBkAHUA
YwB0AG8ALAAgAEAATQBhAHIAYwBhAFAAcgBvAGQAdQBjAHQAbwAsACAAQABDAGEAdABlAGcAbwBy
AGkAYQAsACAAQABTAG8AZABTAHUAUwB1AHIAcwBhAGwALAAgAEAATgBhAG0AZQBTAHUAYwB1AHIA
cwBhAGwALAAgAEAARABpAHIAZQBjAFMAdQBjAHUAcgBzAGEAbAAsACAAQABSAGUAZwBpAG8AbgAs
ACAAQABEAGUAcABhACwAIABAAFUAbgBpAHQAcwAsACAAQABDAG8AcwB0AG8AVQApAAANQABGAGUA
YwBoAGEAABtAAEMAbwBkAFAAcgBvAHYAZQBlAGQAbwByAAAdQABOAGEAbQBlAFAAcgBvAHYAZQBl
AGQAbwByAAAfQABEAGkAcgBlAGMAUAByAG8AdgBlAGUAZABvAHIAACFAAE4AdQBtAGIAZQByAFAA
cgBvAHYAZQBlAGQAbwByAAAbQABXAGUAYgBQAHIAbwB2AGUAZQBkAG8AcgAAGUAAQwBvAGQAUABy
AG8AZAB1AGMAdABvAAAbQABOAGEAbQBlAFAAcgBvAGQAdQBjAHQAbwAAHUAATQBhAHIAYwBhAFAA
cgBvAGQAdQBjAHQAbwAAFUAAQwBhAHQAZQBnAG8AcgBpAGEAABlAAFMAbwBkAFMAdQBTAHUAcgBz
AGEAbAAAG0AATgBhAG0AZQBTAHUAYwB1AHIAcwBhAGwAAB1AAEQAaQByAGUAYwBTAHUAYwB1AHIA
cwBhAGwAAA9AAFIAZQBnAGkAbwBuAAALQABEAGUAcABhAAANQABVAG4AaQB0AHMAAA9AAEMAbwBz
AHQAbwBVAACECyAAKABGAGUAYwBoAGEALAAgAEMAbwBkAEMAbABpAGUAbgB0AGUALAAgAE4AYQBt
AGUAQwBsAGkAZQBuAHQAZQAsACAAVABpAHAAbwBDAGwAaQBlAG4AdABlACwAIABEAGkAcgBlAGMA
QwBsAGkAZQBuAHQAZQAsACAATgB1AG0AYgBlAHIAQwBsAGkAZQBuAHQAZQAsACAAQwBvAGQAVgBl
AG4AZABlAGQAbwByACwAIABOAGEAbQBlAFYAZQBuAGQAZQBkAG8AcgAsACAAVgBhAGMAYQBjAGkA
bwBuAGkAcwB0AGEALAAgAEMAbwBkAFAAcgBvAGQAdQBjAHQAbwAsACAATgBhAG0AZQBQAHIAbwBk
AHUAYwB0AG8ALAAgAE0AYQByAGMAYQBQAHIAbwBkAHUAYwB0AG8ALAAgAEMAYQB0AGUAZwBvAHIA
aQBhACwAIABTAG8AZABTAHUAUwB1AHIAcwBhAGwALAAgAE4AYQBtAGUAUwB1AGMAdQByAHMAYQBs
ACwAIABEAGkAcgBlAGMAUwB1AGMAdQByAHMAYQBsACwAIABSAGUAZwBpAG8AbgAsACAARABlAHAA
YQAsACAAVQBuAGkAdABzACwAIABQAHIAZQBjAGkAbwBVAG4AaQB0AHMAKQAgAFYAQQBMAFUARQBT
ACAAKABAAEYAZQBjAGgAYQAsACAAQABDAG8AZABDAGwAaQBlAG4AdABlACwAIABAAE4AYQBtAGUA
QwBsAGkAZQBuAHQAZQAsACAAQABUAGkAcABvAEMAbABpAGUAbgB0AGUALAAgAEAARABpAHIAZQBj
AEMAbABpAGUAbgB0AGUALAAgAEAATgB1AG0AYgBlAHIAQwBsAGkAZQBuAHQAZQAsACAAQABDAG8A
ZABWAGUAbgBkAGUAZABvAHIALAAgAEAATgBhAG0AZQBWAGUAbgBkAGUAZABvAHIALAAgAEAAVgBh
AGMAYQBjAGkAbwBuAGkAcwB0AGEALAAgAEAAQwBvAGQAUAByAG8AZAB1AGMAdABvACwAIABAAE4A
YQBtAGUAUAByAG8AZAB1AGMAdABvACwAIABAAE0AYQByAGMAYQBQAHIAbwBkAHUAYwB0AG8ALAAg
AEAAQwBhAHQAZQBnAG8AcgBpAGEALAAgAEAAUwBvAGQAUwB1AFMAdQByAHMAYQBsACwAIABAAE4A
YQBtAGUAUwB1AGMAdQByAHMAYQBsACwAIABAAEQAaQByAGUAYwBTAHUAYwB1AHIAcwBhAGwALAAg
AEAAUgBlAGcAaQBvAG4ALAAgAEAARABlAHAAYQAsACAAQABVAG4AaQB0AHMALAAgAEAAUAByAGUA
YwBpAG8AVQBuAGkAdABzACkAABdAAEMAbwBkAEMAbABpAGUAbgB0AGUAABlAAE4AYQBtAGUAQwBs
AGkAZQBuAHQAZQAAGUAAVABpAHAAbwBDAGwAaQBlAG4AdABlAAAbQABEAGkAcgBlAGMAQwBsAGkA
ZQBuAHQAZQAAHUAATgB1AG0AYgBlAHIAQwBsAGkAZQBuAHQAZQAAGUAAQwBvAGQAVgBlAG4AZABl
AGQAbwByAAAbQABOAGEAbQBlAFYAZQBuAGQAZQBkAG8AcgAAG0AAVgBhAGMAYQBjAGkAbwBuAGkA
cwB0AGEAABlAAFAAcgBlAGMAaQBvAFUAbgBpAHQAcwAAI1UAcwBlAHIAOgA6AEYAbwBsAGQAZQBy
AEUAcgByAG8AcgAAG1wARQByAHIAbwByAEwAbwBnAC4AbABvAGcAAHFTAFQAXwBhADYAMwA2AGQA
OABjADMAMQBmAGEAZAA0ADcANQA0AGEAOQBkADIANAAxADcAYwAzADMANgA5ADcANgA0ADgALgBQ
AHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAAAAAEjgNkuNG/ZEr1A6USVT
3GMABCABAQgDIAABBSABARERBCABAQ4FIAEBEWUjBxYODg4ODg4dDggSPQgOEkEdDhJFEj0IDhJB
HQ4SRRJJEk0EIAASdQQgABJ5BSABEn0cAyAAHAMgAA4FAAIODg4GAAIdDg4OBSAAEoCJBiABEoCN
HAQgARwcBCAAHQMGIAEdDh0DBgADDg4ODgYgAgEOEj0FIAASgJUHIAISgJkOHAMgAAgFAAESTQ4I
AAESgLERgLUFIAASgLkHIAIBDhKAuQi3elxWGTTgiQiJhF3NgIDMkQQAAAAABAEAAAADBhJdAwYS
YQMGEhACBggDBhEUBAAAEl0EAAASYQUAAQESYQQAABIQAwAAAQQIABJdBAgAEmEECAASEAgBAAgA
AAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU1RfYTYzNmQ4
YzMxZmFkNDc1NGE5ZDI0MTdjMzM2OTc2NDgAAAUBAAAAAAwBAAdIUCBJbmMuAAAdAQAYQ29weXJp
Z2h0IEAgSFAgSW5jLiAyMDI0AABNAQAcLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjcuMgEAVA4U
RnJhbWV3b3JrRGlzcGxheU5hbWUULk5FVCBGcmFtZXdvcmsgNC43LjIAtAAAAM7K774BAAAAkQAA
AGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAu
MC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lz
dGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAADhC
AAAAAAAAAAAAAFJCAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAABEQgAAAAAAAAAAAAAAAF9Db3JE
bGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAEAAA
ABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABYYAAA
NgQAAAAAAAAAAAAANgQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E7/4A
AAEAAAABAJFdgiIAAAEAkV2CIj8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBWAGEA
cgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAAAACw
BJYDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAHIDAAABADAAMAAwADAAMAA0AGIA
MAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAwAAgAAQBDAG8AbQBwAGEAbgB5AE4AYQBt
AGUAAAAAAEgAUAAgAEkAbgBjAC4AAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8A
bgAAAAAAUwBUAF8AYQA2ADMANgBkADgAYwAzADEAZgBhAGQANAA3ADUANABhADkAZAAyADQAMQA3
AGMAMwAzADYAOQA3ADYANAA4AAAAPgAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4A
MAAuADgAOAAzADQALgAyADMAOQA1ADMAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBl
AAAAUwBUAF8AYQA2ADMANgBkADgAYwAzADEAZgBhAGQANAA3ADUANABhADkAZAAyADQAMQA3AGMA
MwAzADYAOQA3ADYANAA4AC4AZABsAGwAAABWABkAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBo
AHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIABIAFAAIABJAG4AYwAuACAAMgAwADIANAAAAAAA
KgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBn
AGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBUAF8AYQA2ADMANgBkADgAYwAzADEAZgBhAGQA
NAA3ADUANABhADkAZAAyADQAMQA3AGMAMwAzADYAOQA3ADYANAA4AC4AZABsAGwAAABoACQAAQBQ
AHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAVABfAGEANgAzADYAZAA4AGMAMwAxAGYAYQBkADQA
NwA1ADQAYQA5AGQAMgA0ADEANwBjADMAMwA2ADkANwA2ADQAOAAAAEIADwABAFAAcgBvAGQAdQBj
AHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AOAA4ADMANAAuADIAMwA5ADUAMwAAAAAARgAPAAEA
QQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AOAA4ADMANAAuADIAMwA5
ADUAMwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAADAAAAGQyAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción]"
      DTS:CreationName=""
      DTS:DTSID="{7415C0C2-376D-48EE-BBB7-44C592624B24}"
      DTS:From="Package\Tarea Ejecutar BDP1"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción"
      DTS:To="Package\Tarea Ejecutar BDP2" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 1]"
      DTS:CreationName=""
      DTS:DTSID="{BA9C78F1-900A-431E-A9B2-77A73E877CFB}"
      DTS:From="Package\Tarea Ejecutar BDP2"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 1"
      DTS:To="Package\Tarea ScriptBD1" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Restricción 2]"
      DTS:CreationName=""
      DTS:DTSID="{F1AF96B0-C7A5-4164-A477-A4244740879C}"
      DTS:From="Package\Tarea Ejecutar BDP2"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Restricción 2"
      DTS:To="Package\Tarea ScriptBD2" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--Esta sección CDATA contiene la información de diseño del paquete. Esta sección incluye información como, por ejemplo, las coordenadas (x,y), el ancho y el alto.-->
<!--Si edita manualmente esta sección y comete un error, puede eliminarlo. -->
<!--El paquete podrá cargarse normalmente, pero se perderá la información de diseño anterior y el diseñador reorganizará los elementos automáticamente en la superficie de diseño.-->
<Objects
  Version="8">
  <!--Cada uno de los nodos siguientes contiene propiedades que no afectan al comportamiento en tiempo de ejecución.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="176,41.6"
          Id="Package\Tarea Ejecutar BDP1"
          TopLeft="300.00000510897,68.8235303769887" />
        <NodeLayout
          Size="176,41.6"
          Id="Package\Tarea Ejecutar BDP2"
          TopLeft="298.57143365607,169.764708263239" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción]"
          TopLeft="387.28571938252,110.423530376989">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,59.3411778862501"
              Start="0,0"
              End="0,51.8411778862501">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,51.8411778862501" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="135.2,41.6"
          Id="Package\Tarea ScriptBD1"
          TopLeft="143.571431016435,275.294121507955" />
        <NodeLayout
          Size="144,41.6"
          Id="Package\Tarea ScriptBD2"
          TopLeft="550.714295092894,279.847062030218" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 1]"
          TopLeft="358.57143365607,211.364708263239">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-147.400002639634,63.9294132447161"
              Start="0,0"
              End="-147.400002639634,56.4294132447161">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21.9173296938038" />
                  <mssgle:CubicBezierSegment
                    Point1="0,21.9173296938038"
                    Point2="0,25.9173296938038"
                    Point3="-4,25.9173296938038" />
                  <mssgle:LineSegment
                    End="-143.400002639634,25.9173296938038" />
                  <mssgle:CubicBezierSegment
                    Point1="-143.400002639634,25.9173296938038"
                    Point2="-147.400002639634,25.9173296938038"
                    Point3="-147.400002639634,29.9173296938038" />
                  <mssgle:LineSegment
                    End="-147.400002639634,56.4294132447161" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Restricción 2]"
          TopLeft="414.57143365607,211.364708263239">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="208.142861436824,68.4823537669793"
              Start="0,0"
              End="208.142861436824,60.9823537669793">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.7631163920186" />
                  <mssgle:CubicBezierSegment
                    Point1="0,23.7631163920186"
                    Point2="0,27.7631163920186"
                    Point3="4,27.7631163920186" />
                  <mssgle:LineSegment
                    End="204.142861436824,27.7631163920186" />
                  <mssgle:CubicBezierSegment
                    Point1="204.142861436824,27.7631163920186"
                    Point2="208.142861436824,27.7631163920186"
                    Point3="208.142861436824,31.7631163920186" />
                  <mssgle:LineSegment
                    End="208.142861436824,60.9823537669793" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>